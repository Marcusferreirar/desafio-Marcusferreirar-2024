class RecintosZoo {
  constructor() {
    this.recintos = [
      { numero: 1, bioma: 'savana', tamanhoTotal: 10, animais: [{ especie: 'MACACO', quantidade: 3 }] },
      { numero: 2, bioma: 'floresta', tamanhoTotal: 5, animais: [] },
      { numero: 3, bioma: 'savana e rio', tamanhoTotal: 7, animais: [{ especie: 'GAZELA', quantidade: 1 }] },
      { numero: 4, bioma: 'rio', tamanhoTotal: 8, animais: [] },
      { numero: 5, bioma: 'savana', tamanhoTotal: 9, animais: [{ especie: 'LEAO', quantidade: 1 }] },
    ];

    this.animais = {
      LEAO: { tamanho: 3, biomas: ['savana'], carnivoro: true },
      LEOPARDO: { tamanho: 2, biomas: ['savana'], carnivoro: true },
      CROCODILO: { tamanho: 3, biomas: ['rio'], carnivoro: true },
      MACACO: { tamanho: 1, biomas: ['savana', 'floresta'], carnivoro: false },
      GAZELA: { tamanho: 2, biomas: ['savana'], carnivoro: false },
      HIPOPOTAMO: { tamanho: 4, biomas: ['savana', 'rio'], carnivoro: false },
    };
  }

  analisaRecintos(tipo, quantidade) {
    // Validação das entradas
    if (!this.animais[tipo]) {
      return { erro: 'Animal inválido' };
    }
    if (quantidade <= 0 || !Number.isInteger(quantidade)) {
      return { erro: 'Quantidade inválida' };
    }

    const { tamanho, biomas, carnivoro } = this.animais[tipo];
    let recintosViaveis = [];

    for (const recinto of this.recintos) {
      let espacoUsado = 0;
      let especiesPresentes = new Set();
      let carnivorosPresentes = false;

      for (const animal of recinto.animais) {
        espacoUsado += this.animais[animal.especie].tamanho * animal.quantidade;
        especiesPresentes.add(animal.especie);
        if (this.animais[animal.especie].carnivoro) {
          carnivorosPresentes = true;
        }
      }

      if (especiesPresentes.size > 1) {
        espacoUsado += 1;
      }

      const espacoNovo = tamanho * quantidade;
      const espacoLivre = recinto.tamanhoTotal - espacoUsado - espacoNovo;

      const regrasValidadas =
        biomas.includes(recinto.bioma) &&
        espacoLivre >= 0 &&
        (!carnivoro || carnivorosPresentes === carnivoro) &&
        (tipo !== 'HIPOPOTAMO' || recinto.bioma === 'savana e rio') &&
        (tipo !== 'MACACO' || recinto.animais.length > 0);

      if (regrasValidadas) {
        recintosViaveis.push(
          Recinto ${recinto.numero} (espaço livre: ${espacoLivre} total: ${recinto.tamanhoTotal})
        );
      }
    }

    if (recintosViaveis.length > 0) {
      return { recintosViaveis: recintosViaveis.sort() };
    } else {
      return { erro: 'Não há recinto viável' };
    }
  }
}

const zoo = new RecintosZoo();
console.log(zoo.analisaRecintos('MACACO', 2)); // Exemplo de chamada do método
console.log(zoo.analisaRecintos('LEAO', 1)); // Exemplo de chamada do método com erro
